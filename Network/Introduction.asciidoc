# Network

## OSI Model
Le model OSI (Open System Interconnection) est un model standardisé de réseau. De manière général, c'est plus le model TCP/IP qui est utilisé.

Le modele OSI a plusieurs layeurs : 

* 7 - Aplication => Des options réseaux pour le programme (particulierement ceux qui utilisent une interfcae pour transporter les données) 
* 6 - Presentation => Transformation des données reçues par le programme en données avec le format standard réseau et gere l'encyrption, compression etc (Data manipulation)
* 5 - Session => Créer la connexion entre les 2 ordinateurs et s'occupent de la maintenir. Cela doit synchroniser les session et maintenir les différents layers pour permettre les requetes avec plusieurs endpoints (comme plusieurs soft/onglet sur google chrome, etc)
* 4 - Transport => Il a pas mal de fonctions. Il choisit le protocole (TCP: Transmission Control Protocole // UDP: User Datagram Protocol), il divise la transmission en petit packets (bits sized)
* 3 - Network => Ce layer s'occupe de situer le destinataire de la requête et le meilleur chemin à prendre. On est encore sur les IP adresss (Gestion Logiciel)
* 2 - Data Link => On passe aux adresses physiques des transmissions. On ajoute donc au paquet qui a l'information et l'adresse IP, l'adresse physique (MAC => Media Access Control) que chaque ordinateur qui peut se connecter à internet dispose pour être identifier. Cela permet aussi de vérifier que les données sont valides à la transmissions et qu'elles n'ont pas été corrompues et que l'information provient bien de la ou elle est supposée venir
* 1 - Physical => C'est le hardware qui envoie le signal electrique à travers le réseau. C'est son job de transformer le binaire en signal electrique et le reconvertir en binaire.

APSTNDP => Anti Patate Sans Teneur Nutritive, Digestive Point.

### TCP ( Transmission Control Protocole )

TCP est basé sur la connection, ce qui veut dire que la connexion est maintenu pendant toute la durée de la requête. Cela permet d'avoir une connexion fiable et qui s'assure que tous les paquets ont été envoyés et reçus au bon endroit. Chaque élément perdu est re-envoyé.

Le protocole TCP est privilegié quand la précision est privilegié. (Packets en TCP => segments)

### UDP ( User Datagram Protocol )

UDP est l'opposé du TCP. Les paquets sont envoyés au recepteur peu importe si le recepteur peut tenir ou non le rythme (ex : Skype pixelisé). 

Le protocole UDP est favorisé quand la vitesse est privilegié (Vidéo streaming) (Packets en UDP => Datagram)


## Encacpsulation

En parcourant les layer, les données vont s'etoffer en ajoutant des détails spécifiques à chauqe layer. Par exemple, le layer Network ajoutera l'adresse IP de la source et de la destination. Le layer Data Link ajoute une information à la fin de la transmission pour vérifier que les données n'ont pas été corrompues. Le process entier s'appelle l'encapsulation. Chaque stage ajoute donc un nouveau Layer aux données puis reforme un groupe de donnée entier et c'est le bloc qui est envoyé:

image::https://muirlandoracle.co.uk/wp-content/uploads/2020/02/image.jpeg[DataLayer]

les données evoluent en nom. A partir du stage 4, cela devient des segments ou des datagrams selon le protocole puis des packets puis des frames et enfin des bits. Le processus est inversé quand il arrive au destinataire (decapsulation)

## TCP/IP Model

Le model TCP/IP est un peu plus vieux mais similaire au modele OSI et il sert de base pour le réseau actuel. Ce mdoel a 4 layers (Applications, Transport, Internet et NEtwork interface). Il couvre les mêmes fonctions que les 7 layers du model OSI:

TCP/IP : 

* Application :
** Application
** Presentation
** Session
* Transport
** Transport
* Internet
** Network
* Network Interface
** Data Link
** Physical

Le sdifferents layers sont des protocles (set de regles) dont les plus importants du TCP/IP sont le TCP (tranmission Control Protocol) qui contrôle le flow de données entre 2 points et l'IP (Internet Protocole) qui contrôle comment les packets sont envoyés.

###TCP
Le TCp est un protocole de connection. Cela veut dire qu'avant d'envoyer des données, il faut d'abord établir une connection : Three way handshake. Cela se passe donc en 3 etapes, cela commence par une requête qui contient un SYN (Synchronise) au serveur. Le serveur va répondre avec un packet qui contient un bit ACK (Acknowledgement) et enfin le client va renvoyer un packet avec un ACK :

image::https://muirlandoracle.co.uk/wp-content/uploads/2020/03/image-2.png[Etablir_Connexion]

Une fois que la connexion est établi, on peut envoyer des données de façon fiables et toutes les données corrompues ou perdues son tre-envoyés.

