# Linux
https://tryhackme.com/room/linuxfundamentalspart1 => Fundamentals
https://tryhackme.com/room/thefindcommand => Find

Linux est un OS basé sur Unix (princiapelement basé sur les commandes lines) il ya plusieurs distributions. Il est utilsié à beaucoup d'endroit (android, serveur, etc) et il est aussi en général plus léger que ses équivalents. Linux est un terme général pour l'ensemble des OS utilisant Unix. Certaines distributions sont uniquement en commandes lignes et n'ont pas de desktop (GUI - Graphical User Interface)

## Commandes :
La plupart des commandes ont soit un man soit un --help pour apprendre à s'en servir


### User

* whoami => donne le nom de l'utilisateur connecté
* su permet de changer d'utilisateur (substitue user)

### Commmandes actions:

* echo => Display text

### File Access

* ls => listing - Liste des éléments dans le dossier - Cela peut être cummulé avec le chemin d'un dossier sans avoir à rentrer dedans -a pour --all pour tout afficher
* cd => change directory
* pwd => Print working directory (chemin)
* Find => cherche un fichier
* file => determine si c'est un fichier ou non et son tpye (il y a pas toujours l'extension)

. => current directory & .. => parent directory

#### File Manipulation

* cat => Concatenate (Display le contenu d'un fichier)
* grep => cherche le contenu d'un fichier pour certaines values => grep "{words}" {filepath}
* touch => Create file
* mkdir => Create a flder
* cp => Copy a file/folder
* mv => Move a file/folder (si le fichier/dossier existe pas, il sera crée (ou renommé) et si le fichier existe déjà, il supprimera l'ancien pour celui qui est copié), c'est le contenu qui est déplacé
* rm => remove a file/folder besoin de -R si c'est un dossier (pour recursive)


## Operators

* & permet d'execute des commandes en background par exemple quand on copie un gros fichier et qu'on veut faire autre chose (ex : Cat access.log &)
* && permet d'executer plusieurs commandes d'un coup (mais que si celle d'avant a réussi
* > output redirector, ce qui permet de rediriger vers un autre endroit ex echo hey > welcome va créer un fichier welcome avec hey dedans
* >> output redirector qui redirige le contenu à la fin de l'endroit et pas à l'endroit, ce qui évite de remplacer ce qui existe déjà contrairement à >

## Raccourcis

* Ctrl + L => Clear le contenu de la commande
* To split vertically: ctrl a then |.
* To split horizontally: ctrl a then S (uppercase 's').
* To unsplit: ctrl a then Q (uppercase 'q').
* To switch from one to the other: ctrl a then tab

## Common Directories

* /etc (most important root directories) pour etcetera, c'est un endroit pour les fichiers systemes qui sont utilisés par l'OS avec des fichiers importants :
** Sudoers : liste des utilisateurs& groupes qui peuvent run sudo et les commandes en tant que root
** passwd & shadow qui permet de savoir comment le systeme enregistre & stocke les mot de passe (passwd peut etre lu par tout le monde mais pas shadow! Tres important)
* /var (pour variable) est le dossier qui contient les informations qi sont souvent accédés par des services/applications sur le systeme comme les logfiles
* /root est le home pour le root system user (rien de spécial, c'est les documents et tout en gros c'est un /home directory)
* /tmp est un directory unique (pour temporary), il est volatile pour les données qui ont besoin d'etre accédés une fois ou 2 fois. C'est similaire à de la mémoire et donc à chaque fois qu'on redemarre l'ordinateur, le contenu est vidé (C'est pratique pour stocker des trucs en pentesting)

